package lineAnimate
import processing.core._

object AnimationTest { 
  def main(args: Array[String]) {
    PApplet.main(Array[String]("lineAnimate.AnimationTest"))
  }  
}

class AnimationTest extends PApplet {
  var pos: Position = Position(200,200)
  val rules: List[RulesIR] = List(
        Right(50),
        Down(50),
        Left(50),
        Up(50)
  )
  
  var posMoved = new Array[Moved](rules.size)
  var startRule = new Array[Start](rules.size)
  
  var i = 0
  for (i <- 0 to (rules.size - 1)) {
    posMoved.update(i, Moved())
    startRule.update(i, Start())
  }    
  startRule(0).setTrue
  
  
  override def settings () {
    size(500, 500)
  }

  override def setup() {
    stroke(255)
    background(0)
  }
    
  override def draw { 
    
    var i = 0
    for (i <- 0 to (rules.size - 2)) {
      if(posMoved(i).num < rules(i).positionToMove && startRule(i).rule) {
        rules(i).modifyPosition(pos)
        posMoved(i).inc
      }
      if(posMoved(i).num == rules(i).positionToMove) 
       startRule(i+1).setTrue
    }
    
    if(posMoved(rules.size - 1).num < rules(rules.size - 1).positionToMove && startRule(rules.size - 1).rule) {
      rules(rules.size - 1).modifyPosition(pos)
      posMoved(rules.size - 1).inc
    }
      
    point(pos.currX, pos.currY)
  }
}